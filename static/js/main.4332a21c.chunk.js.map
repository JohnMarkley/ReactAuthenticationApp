{"version":3,"sources":["components/layout/NavBar.js","components/Pages/Home.js","components/Pages/Members.js","components/auth/SignInWidget.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","textAlign","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","Button_default","component","Link","to","withAuth","_Component","Home","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","authenticated","checkAuthentication","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","auth","isAuthenticated","sent","setState","stop","login","_callee2","_context2","logout","_callee3","_context3","inherits","createClass","key","value","_componentDidMount","_callee4","_context4","_componentDidUpdate","_callee5","_context5","mainContent","index_es","onClick","styles","button","reactstrap_es","fluid","Card_default","Component","theme","card","minWidth","Members","currentUserName","currentUserEmail","idToken","JSON","parse","localStorage","getItem","claims","name","email","_this$state","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","logo","renderEl","onSuccess","onError","remove","Login","res","status","redirect","sessionToken","session","token","err","console","log","_checkAuthentication","Redirect","pathname","auth_SignInWidget","onAuthRequired","_ref","history","push","App","BrowserRouter","dist","issuer","client_id","redirect_uri","window","location","origin","layout_NavBar","Route","path","exact","render","auth_Login","ImplicitCallback","Boolean","hostname","match","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4332a21c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction NavBar(props) {\r\n    const { classes } = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Authentication App \r\n            </Typography>\r\n            <Button component={ Link } to=\"/\" color=\"inherit\">Home</Button>\r\n            <Button component={ Link } to=\"/Members\" color=\"inherit\">Member Area</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n      textAlign: \"left\",\r\n    },\r\n    menuButton: {\r\n      marginLeft: -12,\r\n      marginRight: 20,\r\n    },\r\n  };\r\n\r\n  export default withStyles(styles)(NavBar);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withAuth } from '@okta/okta-react';\r\nimport { Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\nexport default withAuth(\r\n    class Home extends Component {\r\n        state = { authenticated: null};\r\n  \r\n\r\n  checkAuthentication = async() => {\r\n    const authenticated = await this.props.auth.isAuthenticated();\r\n    if (authenticated !== this.state.authenticated) {\r\n      this.setState({ authenticated });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n    login = async() => {\r\n    this.props.auth.login('/ReactAuthenticationApp/');\r\n  }\r\n\r\n    logout = async() =>{\r\n    this.props.auth.logout('/ReactAuthenticationApp/');\r\n  }\r\n\r\n  render() {\r\n    if (this.state.authenticated === null) return null;\r\n\r\n    const mainContent = this.state.authenticated ? (\r\n        <div>\r\n            <p>You have entered the app, <Link to=\"/members\">click here</Link> </p>\r\n            <Button onClick={this.logout} variant=\"contained\" color=\"primary\" className={styles.button}>\r\n            Logout\r\n            </Button> \r\n        </div> ) :(\r\n        <div>\r\n            <p>For demo purposes, you can use the following login credentials: <br /> Username: John@doe.com <br /> Password: Admin1234</p>\r\n            <Button onClick={this.login} variant=\"contained\" color=\"primary\" className={styles.button}>\r\n            Login\r\n            </Button> \r\n\r\n        </div>\r\n\r\n\r\n    );\r\n      \r\n    return (\r\n    <div className=\"Full\">\r\n    \r\n      <Jumbotron fluid>\r\n        <Container fluid>\r\n        <Card className=\"Card\">\r\n          <h1 className=\"display-4\">Welcome to the authentication app!</h1>\r\n          <p className=\"lead\">This application was made with React, Okta for user authentication, Matieral Ui & Bootstrap</p>\r\n          <p>This app also utilizes tokens in local storage to display details about the user</p>\r\n          {mainContent} \r\n          </Card>\r\n        </Container>\r\n      </Jumbotron>\r\n      \r\n    </div>\r\n    \r\n     \r\n        \r\n    \r\n          \r\n    );\r\n  }\r\n});\r\n\r\nconst styles = theme => ({\r\n   \r\n    card: {\r\n        minWidth: 275,\r\n    }\r\n  });\r\n\r\n","import React, { Component } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\n\r\nclass Members extends Component {\r\n\r\n  state={\r\n    currentUserName: '',\r\n    currentUserEmail: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n    const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    this.setState({\r\n      currentUserName: idToken.idToken.claims.name,\r\n      currentUserEmail: idToken.idToken.claims.email\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUserEmail, currentUserName } = this.state;\r\n\r\n    return (\r\n      <div className=\"Full\">\r\n\r\n        <Jumbotron fluid>\r\n          <Container fluid>\r\n          <Card className=\"Card\">\r\n          <h1>Welcome, {currentUserName}</h1>\r\n          <p>Your email is: {currentUserEmail}</p>\r\n          </Card>\r\n        </Container>\r\n      </Jumbotron>\r\n        \r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Members;\r\n  ","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\nimport '@okta/okta-signin-widget/dist/css/okta-theme.css';\r\n\r\nclass SignInWidget extends Component {\r\n  componentDidMount() {\r\n    const el = ReactDOM.findDOMNode(this);\r\n    this.widget = new OktaSignIn({\r\n      baseUrl: this.props.baseUrl,\r\n      logo: 'logotodo.png'\r\n    });\r\n    this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.widget.remove();\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Full\" />;\r\n  }\r\n};\r\n\r\nexport default SignInWidget;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SignInWidget from './SignInWidget';\r\nimport { withAuth } from '@okta/okta-react';\r\n\r\nexport default withAuth(class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      authenticated: null\r\n    };\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  async checkAuthentication() {\r\n    const authenticated = await this.props.auth.isAuthenticated();\r\n    if (authenticated !== this.state.authenticated) {\r\n      this.setState({ authenticated });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  onSuccess = (res) => {\r\n    if (res.status === 'SUCCESS') {\r\n      return this.props.auth.redirect({\r\n        sessionToken: res.session.token\r\n      });\r\n   } else {\r\n    // The user can be in another authentication state that requires further action.\r\n    // For more information about these states, see:\r\n    //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n    }\r\n  }\r\n\r\n  onError = (err) => {\r\n    console.log('error logging in', err);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.authenticated === null) return null;\r\n    return this.state.authenticated ?\r\n      <Redirect to={{ pathname: '/' }}/> :\r\n      <SignInWidget\r\n        baseUrl={this.props.baseUrl}\r\n        onSuccess={this.onSuccess}\r\n        onError={this.onError}/>;\r\n  }\r\n});","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Security, SecureRoute, ImplicitCallback } from '@okta/okta-react';\nimport NavBar from './components/layout/NavBar';\nimport Home from './components/Pages/Home';\nimport Members from './components/Pages/Members';\nimport Login from './components/auth/Login';\n\nimport './App.css';\n\nfunction onAuthRequired({history}){\n  history.push('/login');\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <Security   issuer='https://dev-645483.oktapreview.com/oauth2/default'\n                  client_id='0oaieqxwnjM40bGLK0h7'\n                  redirect_uri={window.location.origin + '/implicit/callback'}\n                  onAuthRequired={onAuthRequired} >\n                  \n      <div className=\"App\">\n        <NavBar />\n        \n\n        <Route path =\"/\" exact={true} component={Home} />\n        <SecureRoute path =\"/Members\" exact={true} component={Members} />\n\n        <Route path='/login' render={() => <Login baseUrl='https://dev-645483.oktapreview.com' /> } />\n        <Route path='/implicit/callback' component={ImplicitCallback}/>\n      </div>\n      </Security>\n      </Router>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}